<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <title>Home</title>
    <style>
    .chatbox {
        outline: 1px solid silver;
        min-height: 160px;
        padding: 0.5em;
    }
    </style>
  </head>
  <body>
    <div class="container">
        <div class="row">
            <div class="col">
            <h1 class="mt-3"> This is the home page</h1>
             <hr />
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <h3> Chat</h3>
                <p> <a href="https://github.com" > Go to github </a> </p>
                <div class="form-group">
                    <label for="username" >Username </label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="of" />
                </div>

                <div class="form-group">
                    <label for="message" >Message </label>
                    <input type="text" name="message"  id="message"class="form-control" autocomplete="of" />
                </div>

                <hr />
        
        <div id ="liveAlertPlaceholder"></div>
                    <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendButton"> Send Message </a>
                <input type="hidden" name="action"  id="action" />
                <div id="status" class="mt-2 float-end"></div>
                <div id="output" class="chatbox mt-3"> 

                </div>
            </div>
            <div class="col-md-8">
            <h3> Who's online</h3>
            <ul id="online_users"></ul>
            </div>
        </div>
    </div>
    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

  </body>
<script src="/static/reconnecting-websocket.min.js"> </script>
  <script>
  let socket = null;
   let o = document.getElementById("output")
   let userfield= document.getElementById("username")
   let messageField= document.getElementById("message")
    let alertPlaceholder = document.getElementById('liveAlertPlaceholder')

function alert(message, type) {
  var wrapper = document.createElement('div')
  wrapper.innerHTML = '<div class="alert alert-' + type + ' alert-dismissible" role="alert">' + message + '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>'

  alertPlaceholder.append(wrapper)
}
  window.onbeforeunload = function(){
      console.log(" Leaving" )
      let jsonData = {}
      jsonData.action = "left"
      socket.send(JSON.stringify(jsonData))
  }
  document.addEventListener("DOMContentLoaded", function(){
      // socket = new WebSocket("ws://127.0.0.1:8080/ws")
      socket = new ReconnectingWebSocket("ws://127.0.0.1:8080/ws", null, {debug: true, reconnectInterval: 3000})
    const offline = `<span class ="badge bg-danger"> Not Connected </span>`
    const online=`<span class ="badge bg-success"> Connected </span>`
      let statusDiv = document.getElementById("status")
      socket.onopen = () => {
          console.log("Successfully connected");
            statusDiv.innerHTML = online
      }
      socket.onclose = () => {
          console.log("Connection close")
        statusDiv.innerHTML = offline

      }

      socket.onerror = (error) => {
          console.log("There was an error")
        statusDiv.innerHTML = offline

      }
      socket.onmessage = message => {
        let data = JSON.parse(message.data)
          console.log("data", data)
          console.log("Actions is ", data.action)
          switch (data.action){
            case "list_users":
                let ul = document.getElementById("online_users")
                while(ul.firstChild) ul.removeChild(ul.firstChild)

                if(data.connected_users.length> 0){
                    data.connected_users.forEach(function(item){
                        let li = document.createElement("li")
                        li.appendChild(document.createTextNode(item))
                        ul.appendChild(li)
                    })
                }
            break
            case "broadcast": 
                o.innerHTML = o.innerHTML + data.message+ "<br/>"
          }
      }
      userfield.addEventListener("change", function(){
          console.log("changed event emited")
          let jsonData = {};
          jsonData["action"] = "username";
          jsonData["username"] = this.value;
          socket.send(JSON.stringify(jsonData))
      })

      messageField.addEventListener("keydown", function(event){
          if(event.code === "Enter"){
              if(!socket){
                  console.log("no connection")
                  return false
              }
              event.preventDefault()
              event.stopPropagation()
        if(userfield.value === "" ||  messageField.value===""){
              alert("fill out the user and message", "warning")
              return false;
          }
          else {
              sendMessage()
          }
          }
      })

      document.getElementById("sendButton").addEventListener("click", function(){
          if(userfield.value === "" ||  messageField.value===""){
              alert("fill out the user and message", "warning")
              return false;
          }
          else {
              sendMessage()
          }
      })
  })
  function sendMessage(){
      let jsonData ={}
      jsonData.action = "broadcast";
      jsonData.username = userfield.value
      jsonData.message = messageField.value
      socket.send(JSON.stringify(jsonData))
      messageField.value =""

  }
  </script>
</html>